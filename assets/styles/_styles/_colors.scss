// Color Palette
$palette: (
  default: (
    source: #ffffff,
    ash: #efefef,
    coal: #101010,
    void: #000000,
    flame: #f1511a,
    sulfur: #ffaa00,
    ectoplasm: #01ff89,
    scry: #3eafc4,
    midnight: #0d1b27,
    ghast: #7a5fff,
    shadow: #281726
  )
);

@function palette($color, $name: default) {
  @return map-get(map-get($palette, $name), $color);
};

// TODO: Remove
$backgroundPrimary: palette(midnight);
$backgroundSecondary: palette(shadow);
$backgroundGradient: linear-gradient(0deg, $backgroundSecondary 0%, transparent 75%, transparent 100%);
$contentPrimary: palette(ash);
$contentSecondary: palette(sulfur);
$actionPrimary: palette(flame);
$actionSecondary: palette(sulfur);
$accentPrimary: palette(ghast);
$accentSecondary: palette(scry);
$accentTertiary: palette(ectoplasm);

// Color Themes - Add themes here using palette()
$theme: (
  // Theme
  default: (
    // Type
    implicit: (
      // Category
      neutral: (
        // Color
        white: palette(source),
        light: palette(ash),
        dark: palette(coal),
        black: palette(void)
      ),
      accent: (
        base: palette(scry),
        alt: palette(ghast),
        alt2: palette(ectoplasm),
      )
    ),
    explicit: (
      background: (
        base: palette(midnight),
        alt: palette(shadow)
      ),
      particles: (
        base: palette(ash),
        alt: palette(scry)
      ),
      modal: (
        base: palette(ghast)
      ),
      content: (
        light: palette(ash),
        dark: palette(coal),
        alt: palette(sulfur)
      ),
      action: (
        base: palette(flame),
        alt: palette(sulfur)
      ),
      status: (
        alert: palette(flame),
        warning: palette(sulfur),
        success: palette(ectoplasm),
        info: palette(scry),
      )
    )
  )

);

:root {
  // Generate default theme
  @each $typeName, $categories in map-get($theme, default) {
    @each $categoryName, $colors in $categories {
        @each $colorName, $color in $colors {
          --color-#{$categoryName}-#{$colorName}: #{$color};
        }
      }
    };

  // Generate all other themes
  @each $themeName, $types in $theme {
    @if $themeName != default {
      &[data-theme="#{$themeName}"] {
        @each $typeName, $categories in $types {
          @each $categoryName, $colors in $categories {
            @each $colorName, $color in $colors {
              --color-#{$categoryName}-#{$colorName}: #{$color};
            }
          }
        }
      }
    }
  };
}