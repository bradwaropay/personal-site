/* global $ */

const page = $('#main')

let transition
let clicked

const options = {
  repeatDelay: 500,
  blacklist: '.no-smoothState',
  prefetch: true,
  cacheLength: 2,
  onBefore: function ($currentTarget, $container) {
    const current = $('[data-viewport]').first().data('viewport') || 0
    const target = $currentTarget.data('viewport-target')

    clicked = true

    switch (true) {
      case current > target:
        transition = 'fadeLeft'
        break
      case current < target:
        transition = 'fadeRight'
        break
      default:
        transition = 'fade'
    }
  },
  onStart: {
    duration: 500,
    render: function ($container) {
      if (!clicked) {
        transition = 'fade'
      }

      $container.attr('data-transition', transition)
      $container.addClass('is-exiting')

      smoothState.restartCSSAnimations()
    }
  },
  onReady: {
    duration: 0,
    render: function ($container, $newContent) {
      clicked = false

      $container.attr('data-transition', transition)
      $container.removeClass('is-exiting')
      $container.html($newContent)
    }
  }
}

const smoothState = page.smoothState(options).data('smoothState')

function pageTransition () {
  smoothState
}

export default pageTransition
