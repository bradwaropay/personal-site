/* global $ */

const page = $('#main')
let transition

const options = {
  prefetch: true,
  cacheLength: 2,
  repeatDelay: 500,
  onBefore: function ($currentTarget, $container) {
    const current = $('[data-viewport]').first().data('viewport') || 0
    const target = $currentTarget.data('target') || 0

    $currentTarget.addClass('is-target')

    switch (true) {
      case current < target:
        transition = 'fadeLeft'
        break
      case current > target:
        transition = 'fadeRight'
        break
      default:
        transition = 'fade'
    }
  },
  onStart: {
    duration: 500,
    render: function ($container) {
      $container.attr('data-transition', transition)
      $container.addClass('is-exiting')
      smoothState.restartCSSAnimations()
    }
  },
  onReady: {
    duration: 0,
    render: function ($container, $newContent) {
      $container.removeClass('is-exiting')
      $container.html($newContent)
    }
  }
}

const smoothState = page.smoothState(options).data('smoothState')

export default smoothState
